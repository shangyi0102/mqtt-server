2020-09-14 09:34:10.208 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 5748 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 09:34:10.224 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 09:34:11.203 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected: Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-14 09:34:11.210 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-14 09:34:11.295 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-09-14 09:34:11.845 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 09:34:12.246 [MQTT Call: clientId=things,timestamp=1600047251848|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 09:34:12.248 [MQTT Call: clientId=things,timestamp=1600047251848|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 09:34:12.299 [main] [INFO]--org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize: Initializing ExecutorService 'taskScheduler'
2020-09-14 09:34:13.818 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarted: Started Main in 4.426 seconds (JVM running for 5.319)
2020-09-14 09:37:10.126 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 09:37:12.297 [MQTT Call: clientId=Default,timestamp=1600047430184|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 09:37:12.299 [MQTT Call: clientId=Default,timestamp=1600047430184|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 09:37:22.663 [MQTT Call: clientId=Default,timestamp=1600047430184|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/A0002/0002/property/report]
2020-09-14 09:39:05.338 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 09:39:07.563 [MQTT Call: clientId=Default,timestamp=1600047545403|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 09:39:07.565 [MQTT Call: clientId=Default,timestamp=1600047545403|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 09:39:14.686 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:101)
	at com.qjzh.link.mqtt.server.MqttNet.subscribe(MqttNet.java:276)
	at com.qjzh.link.mqtt.Test.main(Test.java:28)
2020-09-14 09:39:14.957 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/A0002/0002/property/report], error=[{"code":4102}]
2020-09-14 09:39:16.623 [MQTT Call: clientId=Default,timestamp=1600047545403|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/A0002/0002/property/report]
2020-09-14 09:43:46.895 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 09:43:49.029 [MQTT Call: clientId=Default,timestamp=1600047826954|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 09:43:49.031 [MQTT Call: clientId=Default,timestamp=1600047826954|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 09:43:56.614 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:100)
	at com.qjzh.link.mqtt.server.MqttNet.subscribe(MqttNet.java:276)
	at com.qjzh.link.mqtt.Test.main(Test.java:28)
2020-09-14 09:43:56.898 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/A0002/0002/property/report], error=[{"code":4102}]
2020-09-14 09:49:06.991 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 09:49:09.373 [MQTT Call: clientId=Default,timestamp=1600048147072|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 09:49:09.374 [MQTT Call: clientId=Default,timestamp=1600048147072|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 09:49:18.696 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:101)
	at com.qjzh.link.mqtt.server.MqttNet.subscribe(MqttNet.java:276)
	at com.qjzh.link.mqtt.Test.main(Test.java:28)
2020-09-14 09:49:19.056 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/A0002/0002/property/report], error=[{"code":4102}]
2020-09-14 10:10:20.140 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 10:10:20.613 [MQTT Call: clientId=Default,timestamp=1600049420148|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 10:10:20.614 [MQTT Call: clientId=Default,timestamp=1600049420148|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 10:10:27.631 [MQTT Call: clientId=Default,timestamp=1600049420148|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/A0002/0002/property/report]
2020-09-14 10:51:20.566 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 10:51:21.064 [MQTT Call: clientId=Default,timestamp=1600051880579|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 10:51:21.065 [MQTT Call: clientId=Default,timestamp=1600051880579|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.10:1883
2020-09-14 10:51:21.096 [MQTT Call: clientId=Default,timestamp=1600051880579|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/A0002/0002/property/report]
2020-09-14 10:52:00.387 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 19036 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 10:52:00.393 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 10:52:20.750 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 18764 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 10:52:20.758 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 10:52:21.435 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected: Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-14 10:52:21.438 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-14 10:52:21.492 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-09-14 10:52:21.846 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 10:52:22.215 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 10:52:22.216 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.10:1883
2020-09-14 10:52:22.267 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/report]
2020-09-14 10:52:22.272 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/event/+/report]
2020-09-14 10:52:22.283 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/set_reply]
2020-09-14 10:52:22.287 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/read_reply]
2020-09-14 10:52:22.293 [MQTT Call: clientId=things,timestamp=1600051941848|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/service/+/invoke_reply]
2020-09-14 10:52:22.300 [main] [INFO]--org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize: Initializing ExecutorService 'taskScheduler'
2020-09-14 10:52:22.996 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarted: Started Main in 2.829 seconds (JVM running for 4.167)
2020-09-14 10:53:02.107 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 17608 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 10:53:02.113 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 10:53:03.152 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected: Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-14 10:53:03.158 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-14 10:53:03.242 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Finished Spring Data repository scanning in 57ms. Found 0 Redis repository interfaces.
2020-09-14 10:53:03.765 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 10:53:04.164 [MQTT Call: clientId=things,timestamp=1600051983767|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 10:53:04.166 [MQTT Call: clientId=things,timestamp=1600051983767|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.91:1883
2020-09-14 10:53:36.373 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:101)
	at com.qjzh.link.mqtt.server.MqttNet.subscribe(MqttNet.java:276)
	at com.qjzh.link.mqtt.server.ThingsDriven.init(ThingsDriven.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1763)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:847)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.qjzh.link.mqtt.Main.main(Main.java:18)
2020-09-14 10:53:38.333 [MQTT Call: clientId=things,timestamp=1600051983767|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/report]
2020-09-14 10:53:42.394 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/+/+/property/report], error=[{"code":4102}]
2020-09-14 10:53:54.500 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:101)
	at com.qjzh.link.mqtt.server.MqttNet.subscribe(MqttNet.java:276)
	at com.qjzh.link.mqtt.server.ThingsDriven.init(ThingsDriven.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1763)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:847)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.qjzh.link.mqtt.Main.main(Main.java:18)
2020-09-14 10:53:54.504 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/+/+/event/+/report], error=[{"code":4102}]
2020-09-14 10:53:56.515 [MQTT Call: clientId=things,timestamp=1600051983767|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/event/+/report]
2020-09-14 10:54:11.971 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.receive: subsribe request error! 
org.eclipse.paho.client.mqttv3.MqttException: 等待来自服务器的响应时超时
	at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)
	at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)
	at com.qjzh.link.mqtt.server.MqttSubscribe.receive(MqttSubscribe.java:101)
	at com.qjzh.link.mqtt.server.MqttNet.subscribeReply(MqttNet.java:283)
	at com.qjzh.link.mqtt.server.ThingsDriven.init(ThingsDriven.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1763)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:847)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.qjzh.link.mqtt.Main.main(Main.java:18)
2020-09-14 10:54:11.975 [main] [ERROR]--com.qjzh.link.mqtt.server.MqttSubscribe.onFailed: subscribe fail, topic = [/device/+/+/property/set_reply], error=[{"code":4102}]
2020-09-14 10:54:13.982 [MQTT Call: clientId=things,timestamp=1600051983767|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/set_reply]
2020-09-14 11:38:26.805 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 18872 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 11:38:26.815 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 11:38:28.117 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected: Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-14 11:38:28.123 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-14 11:38:28.219 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Finished Spring Data repository scanning in 61ms. Found 0 Redis repository interfaces.
2020-09-14 11:38:28.714 [main] [WARN]--org.springframework.context.annotation.AnnotationConfigApplicationContext.refresh: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mqttConfig': Unsatisfied dependency expressed through field 'mqttProperties'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.qjzh.link.mqtt.config.MqttProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-09-14 11:38:28.733 [main] [INFO]--org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage: 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-14 11:38:29.087 [main] [ERROR]--org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mqttProperties in com.qjzh.link.mqtt.config.MqttConfig required a bean of type 'com.qjzh.link.mqtt.config.MqttProperties' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.qjzh.link.mqtt.config.MqttProperties' in your configuration.

2020-09-14 11:54:53.356 [main] [INFO]--com.qjzh.link.mqtt.Main.logStarting: Starting Main on LIUZHENXING-PC with PID 18700 (E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool\target\classes started by LIUZHENXING in E:\WORKSPACE-STS\Test2\qjzh-mqtt-tool)
2020-09-14 11:54:53.365 [main] [INFO]--com.qjzh.link.mqtt.Main.logStartupProfileInfo: No active profile set, falling back to default profiles: default
2020-09-14 11:54:54.295 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected: Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-14 11:54:54.299 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-14 11:54:54.371 [main] [INFO]--org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn: Finished Spring Data repository scanning in 47ms. Found 0 Redis repository interfaces.
2020-09-14 11:54:54.837 [main] [INFO]--com.qjzh.link.mqtt.server.MqttNet.init: default cert file
2020-09-14 11:54:55.229 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttNet.onSuccess: connect onSuccess
2020-09-14 11:54:55.229 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.callback.DefaulMessageCallback.connectComplete: connect complete ----> tcp://192.168.49.10:1883
2020-09-14 11:55:03.527 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/report]
2020-09-14 11:55:07.915 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/event/+/report]
2020-09-14 11:55:11.473 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/set_reply]
2020-09-14 11:55:14.038 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/property/read_reply]
2020-09-14 11:55:16.859 [MQTT Call: clientId=things,timestamp=1600055694841|] [INFO]--com.qjzh.link.mqtt.server.MqttSubscribe.onSuccess: subscribe succ, topic = [/device/+/+/service/+/invoke_reply]
